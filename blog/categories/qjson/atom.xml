<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: qjson | Flavio Castelli]]></title>
  <link href="http://flavio.castelli.name/blog/categories/qjson/atom.xml" rel="self"/>
  <link href="http://flavio.castelli.name/"/>
  <updated>2014-08-30T22:16:16+02:00</updated>
  <id>http://flavio.castelli.name/</id>
  <author>
    <name><![CDATA[Flavio Castelli]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[qjson 0.8.1 released]]></title>
    <link href="http://flavio.castelli.name/2012/11/27/qjson-0-dot-8-1-released/"/>
    <updated>2012-11-27T11:24:00+01:00</updated>
    <id>http://flavio.castelli.name/2012/11/27/qjson-0-dot-8-1-released</id>
    <content type="html"><![CDATA[<p>Just a quick information, QJson 0.8.1 has been released. This release ensure API and ABI compatibility with version 0.7.1.</p>

<p>The previous 0.8.0 release broke ABI compatibility without changing the <code>SOVERSION</code>.</p>

<h2>Toward QJson 1.0.0</h2>

<p>I&rsquo;m not entirely happy with some parts of QJson&rsquo;s API. I addressed these issues inside of the <a href="https://github.com/flavio/qjson/tree/1_0_0">1_0_0</a> branch.</p>

<p>I would appreciate to hear your opinion before merging this branch into master and releasing QJson 1.0.0.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QJson 0.8.0 released]]></title>
    <link href="http://flavio.castelli.name/2012/11/21/qjson-0-dot-8-0-released/"/>
    <updated>2012-11-21T22:03:00+01:00</updated>
    <id>http://flavio.castelli.name/2012/11/21/qjson-0-dot-8-0-released</id>
    <content type="html"><![CDATA[<p>Almost three years passed since latest release of QJson.
A lot of stuff happened in my life and QJson definitely paid for that.
I have to admit I&rsquo;m a bit ashamed.</p>

<p>So here we go, QJson 0.8.0 is out!</p>

<h2>What changed</h2>

<p>A lot of bugs has been smashed during this time, this new release will fix
issues like <a href="https://bugs.gentoo.org/show_bug.cgi?id=428256">this</a> one and
<a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=687537">this</a> in a nicer way.</p>

<p>QJson&rsquo;s API is still backward compatible, while the ABI changed.</p>

<h2>Symbian support</h2>

<p>Some work has also been done to get QJson work on the Symbian platform. The
development happened a long time before <a href="http://www.wired.com/business/2011/02/nokia-burning-platform/all/">Symbian was declared dead</a>.</p>

<p>Currently I do not offer any kind of support for the Symbian platform because
IMHO Symbian development is a mess and given the current situation in the mobile
world I don&rsquo;t see any point in investing more efforts on that.</p>

<p>Obviously Symbian patches and documentation are still accepted, as long as they
don&rsquo;t cause issues to the other target platforms.</p>

<h2>QMake support</h2>

<p>QJson always used cmake as build system but since some Windows developers
had problems with it I decided to add some <code>.pro</code> files. That proved to be a
bad choice for me since I had to support two build systems. I prefer to invest
my time fixing bugs in the code and adding interesting features rather then
triaging qmake issues on Windows. Hence I decided to remove them from git.</p>

<p>If you are a nostalgic you can still grab these files from git. They
have been removed with commit <a href="https://github.com/flavio/qjson/commit/66d10c44dd3b21d693933f320c32b3c9a175a693">66d10c44dd3b21</a>.</p>

<h2>Relocating to Github</h2>

<p>I decided to move QJson&rsquo;s code from Gitorious to <a href="https://github.com/flavio/qjson">Github</a>.
<a href="https://github.com/flavio/qjson/issues">Github&rsquo;s issue sysyem</a> is going to replace Sourceforge&rsquo;s bug tracking system.</p>

<p>I currently use Github a lot, both for personal projects and for work, and I simply love it.
I think it offers the best tools in the market and that&rsquo;s really important to me.</p>

<p><a href="http://qjson.sourceforge.net">QJson&rsquo;s website</a> and mailing lists are still going to be hosted on Sourceforge.</p>

<hr>


<p><br>
I think that&rsquo;s all from now. If you want more details about the changes introduced
take a look at the <a href="https://github.com/flavio/qjson/blob/master/ChangeLog">changelog</a>
or checkout <a href="http://qjson.sourceforge.net">QJson&rsquo;s website</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QJson and Symbian]]></title>
    <link href="http://flavio.castelli.name/2010/03/14/qjson-symbian/"/>
    <updated>2010-03-14T00:55:51+01:00</updated>
    <id>http://flavio.castelli.name/2010/03/14/qjson-symbian</id>
    <content type="html"><![CDATA[<p>I&rsquo;m really pleased to announce that latest version of QJson on master is
working on Symbian. You can find the installation instruction
<a href="http://qjson.sourceforge.net/get_it/symbian.html">here</a>.</p>

<p>Since I&rsquo;m not a Symbian developer it has been a little hard for me to achieve
that. I would like to thank <a href="http://gitorious.org/~anluoma">Antti Luoma</a> for
his help.</p>

<p>There are also good news for Windows developers: now building QJson under
Windows is easier. Checkout the new <a href="http://qjson.sourceforge.net/get_it/windows.html">installation instruction
page</a>.</p>

<p>I hope this will help all the Windows developers who want to use QJson.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QJson code moves to gitorious]]></title>
    <link href="http://flavio.castelli.name/2009/12/05/qjson-code-moves-to-gitorious/"/>
    <updated>2009-12-05T16:48:25+01:00</updated>
    <id>http://flavio.castelli.name/2009/12/05/qjson-code-moves-to-gitorious</id>
    <content type="html"><![CDATA[<p>Just a quick note: I have just moved QJson source code to
<a href="http://gitorious.org/qjson">this</a> git repository hosted by gitorious.</p>

<p>I&rsquo;ll keep the code on KDE&rsquo;s svn synchronized with the git repository.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QJson: from QObject to JSON and vice-versa]]></title>
    <link href="http://flavio.castelli.name/2009/12/04/qjson-qobject-serialization-deserialization/"/>
    <updated>2009-12-04T01:07:48+01:00</updated>
    <id>http://flavio.castelli.name/2009/12/04/qjson-qobject-serialization-deserialization</id>
    <content type="html"><![CDATA[<p>Some days ago I introduced the possibility to serialize a QObject instance to
JSON. Today I&rsquo;m going to show you the opposite operation: initializing a
QObject using a JSON object.</p>

<p>I refactored a bit my latest changes: I created a new class called
QObjectHelper that provides the methods required to convert a QObject instance
to a QVariantMap and vice-versa.</p>

<p>This class can be used in conjunction with the Serializer and Parser classes
to serialize and deserialize QObject instances to and from JSON.</p>

<p>Let me show a quick example, suppose the declaration of Person class looks
like this:</p>

<p><figure class='code'><figcaption><span>[class definition] [ ] </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">Person</span> <span class="o">:</span> <span class="k">public</span> <span class="n">QObject</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">Q_OBJECT</span>
</span><span class='line'>  <span class="n">Q_PROPERTY</span><span class="p">(</span><span class="n">QString</span> <span class="n">name</span> <span class="n">READ</span> <span class="n">name</span> <span class="n">WRITE</span> <span class="n">setName</span><span class="p">)</span>
</span><span class='line'>  <span class="n">Q_PROPERTY</span><span class="p">(</span><span class="kt">int</span> <span class="n">phoneNumber</span> <span class="n">READ</span> <span class="n">phoneNumber</span> <span class="n">WRITE</span> <span class="n">setPhoneNumber</span><span class="p">)</span>
</span><span class='line'>  <span class="n">Q_PROPERTY</span><span class="p">(</span><span class="n">Gender</span> <span class="n">gender</span> <span class="n">READ</span> <span class="n">gender</span> <span class="n">WRITE</span> <span class="n">setGender</span><span class="p">)</span>
</span><span class='line'>  <span class="n">Q_PROPERTY</span><span class="p">(</span><span class="n">QDate</span> <span class="n">dob</span> <span class="n">READ</span> <span class="n">dob</span> <span class="n">WRITE</span> <span class="n">setDob</span><span class="p">)</span>
</span><span class='line'>  <span class="n">Q_ENUMS</span><span class="p">(</span><span class="n">Gender</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">Person</span><span class="p">(</span><span class="n">QObject</span><span class="o">*</span> <span class="n">parent</span> <span class="o">=</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="o">~</span><span class="n">Person</span><span class="p">();</span>
</span><span class='line'>    <span class="n">QString</span> <span class="n">name</span><span class="p">()</span> <span class="k">const</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">setName</span><span class="p">(</span><span class="k">const</span> <span class="n">QString</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">phoneNumber</span><span class="p">()</span> <span class="k">const</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">setPhoneNumber</span><span class="p">(</span><span class="k">const</span> <span class="kt">int</span>  <span class="n">phoneNumber</span><span class="p">);</span>
</span><span class='line'>    <span class="k">enum</span> <span class="n">Gender</span> <span class="p">{</span><span class="n">Male</span><span class="p">,</span> <span class="n">Female</span><span class="p">};</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">setGender</span><span class="p">(</span><span class="n">Gender</span> <span class="n">gender</span><span class="p">);</span>
</span><span class='line'>    <span class="n">Gender</span> <span class="n">gender</span><span class="p">()</span> <span class="k">const</span><span class="p">;</span>
</span><span class='line'>    <span class="n">QDate</span> <span class="n">dob</span><span class="p">()</span> <span class="k">const</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">setDob</span><span class="p">(</span><span class="k">const</span> <span class="n">QDate</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">dob</span><span class="p">);</span>
</span><span class='line'>  <span class="k">private</span><span class="o">:</span>
</span><span class='line'>    <span class="n">QString</span> <span class="n">m_name</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">m_phoneNumber</span><span class="p">;</span>
</span><span class='line'>    <span class="n">Gender</span> <span class="n">m_gender</span><span class="p">;</span>
</span><span class='line'>    <span class="n">QDate</span> <span class="n">m_dob</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3>From QObject to JSON</h3>

<p>The following code will serialize an instance of Person to JSON :</p>

<p><figure class='code'><figcaption><span>[From QObject to JSON] [ ] </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">Person</span> <span class="n">person</span><span class="p">;</span>
</span><span class='line'><span class="n">person</span><span class="p">.</span><span class="n">setName</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Flavio</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;);</span>
</span><span class='line'><span class="n">person</span><span class="p">.</span><span class="n">setPhoneNumber</span><span class="p">(</span><span class="mi">123456</span><span class="p">);</span>
</span><span class='line'><span class="n">person</span><span class="p">.</span><span class="n">setGender</span><span class="p">(</span><span class="n">Person</span><span class="o">::</span><span class="n">Male</span><span class="p">);</span>
</span><span class='line'><span class="n">person</span><span class="p">.</span><span class="n">setDob</span><span class="p">(</span><span class="n">QDate</span><span class="p">(</span><span class="mi">1982</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">12</span><span class="p">));</span>
</span><span class='line'><span class="n">QVariantMap</span> <span class="n">variant</span> <span class="o">=</span> <span class="n">QObjectHelper</span><span class="o">::</span><span class="n">qobject2qvariant</span><span class="p">(</span><span class="o">&amp;</span><span class="n">person</span><span class="p">;);</span>
</span><span class='line'><span class="n">Serializer</span> <span class="n">serializer</span><span class="p">;</span>
</span><span class='line'><span class="n">qDebug</span><span class="p">()</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">serializer</span><span class="p">.</span><span class="n">serialize</span><span class="p">(</span> <span class="n">variant</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>The generated output will be:</p>

<p><figure class='code'><figcaption><span>[JSON data] [ ] </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span> <span class="err">&amp;ldquo;dob&amp;rdquo;</span> <span class="err">:</span> <span class="err">&amp;ldquo;1982-07-12&amp;rdquo;,</span> <span class="err">&amp;ldquo;gender&amp;rdquo;</span> <span class="err">:</span> <span class="err">0,</span> <span class="err">&amp;ldquo;name&amp;rdquo;</span> <span class="err">:</span> <span class="err">&amp;ldquo;Flavio&amp;rdquo;,</span> <span class="err">&amp;ldquo;phoneNumber&amp;rdquo;</span> <span class="err">:</span> <span class="err">123456</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3>From JSON to QObject</h3>

<p>Suppose you have the following JSON data stored into a QString:</p>

<p><figure class='code'><figcaption><span>[JSON data] [ ] </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span> <span class="err">&amp;ldquo;dob&amp;rdquo;</span> <span class="err">:</span> <span class="err">&amp;ldquo;1982-07-12&amp;rdquo;,</span> <span class="err">&amp;ldquo;gender&amp;rdquo;</span> <span class="err">:</span> <span class="err">0,</span> <span class="err">&amp;ldquo;name&amp;rdquo;</span> <span class="err">:</span> <span class="err">&amp;ldquo;Flavio&amp;rdquo;,</span> <span class="err">&amp;ldquo;phoneNumber&amp;rdquo;</span> <span class="err">:</span> <span class="err">123456</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>The following code will initialize an already allocated instance of Person
using the JSON values:</p>

<p><figure class='code'><figcaption><span>[From JSON to QObject] [ ] </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">Parser</span> <span class="n">parser</span><span class="p">;</span>
</span><span class='line'><span class="n">QVariant</span> <span class="n">variant</span> <span class="o">=</span> <span class="n">parser</span><span class="p">.</span><span class="n">parse</span><span class="p">(</span><span class="n">json</span><span class="p">);</span><span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'><span class="n">Person</span> <span class="n">person</span><span class="p">;</span>
</span><span class='line'><span class="n">QObjectHelper</span><span class="o">::</span><span class="n">qvariant2qobject</span><span class="p">(</span><span class="n">variant</span><span class="p">.</span><span class="n">toMap</span><span class="p">(),</span> <span class="o">&amp;</span><span class="n">person</span><span class="p">;);</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3>A new release</h3>

<p>These changes have been included inside the new release of QJson: 0.7.0.</p>

<p>Packages for openSUSE are building right now.</p>
]]></content>
  </entry>
  
</feed>
