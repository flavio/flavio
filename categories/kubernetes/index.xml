<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Flavio Castelli</title>
    <link>http://flavio.castelli.me/categories/kubernetes/</link>
    <description>Recent content in Kubernetes on Flavio Castelli</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Jun 2024 11:00:00 +0200</lastBuildDate>
    
	<atom:link href="http://flavio.castelli.me/categories/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>KCD Italy - CEL, Kubernetes ValidatingAdmissionPolicy and Kubewarden</title>
      <link>http://flavio.castelli.me/2024/06/25/kcd-italy---cel-kubernetes-validatingadmissionpolicy-and-kubewarden/</link>
      <pubDate>Tue, 25 Jun 2024 11:00:00 +0200</pubDate>
      
      <guid>http://flavio.castelli.me/2024/06/25/kcd-italy---cel-kubernetes-validatingadmissionpolicy-and-kubewarden/</guid>
      <description>Last week I had the opportunity to speak at KCD Italy, a Kubernetes Community Days event. I delivered a talk titled &amp;ldquo;How to leverage and extend CEL for your cluster security&amp;rdquo;. The talk gives an overview about the Common Expression Language (CEL), Kubernetes ValidatingAdmissionPolicy, and Kubewarden.
While the talk has been delivered in Italian, the slides are in English and can be found here.</description>
    </item>
    
    <item>
      <title>Playing with Common Expression Language</title>
      <link>http://flavio.castelli.me/2022/07/21/playing-with-common-expression-language/</link>
      <pubDate>Thu, 21 Jul 2022 19:00:00 +0200</pubDate>
      
      <guid>http://flavio.castelli.me/2022/07/21/playing-with-common-expression-language/</guid>
      <description>Common Expression Language (CEL) is an expression language created by Google. It allows to define constraints that can be used to validate input data.
This language is being used by some open source projects and products, like:
 Google Cloud Certificate Authority Service Envoy There&amp;rsquo;s even a Kubernetes Enhancement Proposal that would use CEL to validate Kubernetes&amp;rsquo; CRDs.  I&amp;rsquo;ve been looking at CEL since some time, wondering how hard it would be to find a way to write Kubewarden validation policies using this expression language.</description>
    </item>
    
    <item>
      <title>Write kubectl plugins using WebAssembly and WASI</title>
      <link>http://flavio.castelli.me/2022/04/26/write-kubectl-plugins-using-webassembly-and-wasi/</link>
      <pubDate>Tue, 26 Apr 2022 21:00:00 +0200</pubDate>
      
      <guid>http://flavio.castelli.me/2022/04/26/write-kubectl-plugins-using-webassembly-and-wasi/</guid>
      <description>A long time passed since the last time I wrote something on this blog! ðŸ˜… I haven&amp;rsquo;t been idle during this time, quite the opposite&amp;hellip; I kept myself busy experimenting with WebAssembly and Kubernetes.
You probably have already heard about WebAssembly, but there are high chances that happened in the context of Web application development. There&amp;rsquo;s however a new emerging trend that consists of using WebAssembly outside of the browser.</description>
    </item>
    
    <item>
      <title>Build multi-architecture container images using argo workflow</title>
      <link>http://flavio.castelli.me/2020/10/05/build-multi-architecture-container-images-using-argo-workflow/</link>
      <pubDate>Mon, 05 Oct 2020 18:30:00 +0200</pubDate>
      
      <guid>http://flavio.castelli.me/2020/10/05/build-multi-architecture-container-images-using-argo-workflow/</guid>
      <description>Note well: this blog post is part of a series, checkout the previous episode about running containerized buildah on top of Kubernetes.
 Quick recap I have a small Kubernetes cluster running at home that is made of ARM64 and x86_64 nodes. I want to build multi-architecture images so that I can run them everywhere on the cluster, regardless of the node architecture. My plan is to leverage the same cluster to build these container images.</description>
    </item>
    
    <item>
      <title>Build multi-architecture container images using Kubernetes</title>
      <link>http://flavio.castelli.me/2020/09/16/build-multi-architecture-container-images-using-kubernetes/</link>
      <pubDate>Wed, 16 Sep 2020 10:00:00 +0200</pubDate>
      
      <guid>http://flavio.castelli.me/2020/09/16/build-multi-architecture-container-images-using-kubernetes/</guid>
      <description>Recently I&amp;rsquo;ve added some Raspberry Pi 4 nodes to the Kubernetes cluster I&amp;rsquo;m running at home.
The overall support of ARM inside of the container ecosystem improved a lot over the last years with more container images made available for the armv7 and the arm64 architectures.
But what about my own container images? I&amp;rsquo;m running some homemade containerized applications on top of this cluster and I would like to have them scheduled both on the x64_64 nodes and on the ARM ones.</description>
    </item>
    
    <item>
      <title>Semantic versioning and containers</title>
      <link>http://flavio.castelli.me/2020/02/27/semantic-versioning-and-containers/</link>
      <pubDate>Thu, 27 Feb 2020 21:48:16 +0200</pubDate>
      
      <guid>http://flavio.castelli.me/2020/02/27/semantic-versioning-and-containers/</guid>
      <description>Developers are used to express the dependencies of their programs using semantic versioning constraints.
For example a Node.js application relying on left-pad could force only certain versions of this library to be used by specifying a constraint like &amp;gt;= 1.1.0 &amp;lt; 1.2.0. This would force npm to install the latest version of the library that satisfies the constraint.
How does that translates to containers?
Imagine the following scenario: a developer deploys a containerized application that requires a Redi database.</description>
    </item>
    
  </channel>
</rss>