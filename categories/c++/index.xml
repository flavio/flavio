<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on Flavio Castelli</title>
    <link>http://flavio.castelli.me/categories/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on Flavio Castelli</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Apr 2009 17:40:45 +0000</lastBuildDate>
    
	<atom:link href="http://flavio.castelli.me/categories/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>rockmarble: see who is going to rock in your town</title>
      <link>http://flavio.castelli.me/2009/04/07/rockmarble-see-who-is-going-to-rock-in-your-town/</link>
      <pubDate>Tue, 07 Apr 2009 17:40:45 +0000</pubDate>
      
      <guid>http://flavio.castelli.me/2009/04/07/rockmarble-see-who-is-going-to-rock-in-your-town/</guid>
      <description>During the last weekend I hacked a bit on rockmarble and I added a new feature: retrieve all the events happening in a certain city.
As usual data is provided by last.fm, which should return also the events _&amp;ldquo;near&amp;rdquo; _the specified city (don&amp;rsquo;t ask me to define a value for near :) ).
I have created new openSUSE packages, this time everything should work fine. Just make sure to remove all qjson packages before installing this release (in fact all the previous problems were due to packaging errors of qjson, now I have created new packages called libqjson0).</description>
    </item>
    
    <item>
      <title>rockmarble: how to follow your favourite artists tour with Marble</title>
      <link>http://flavio.castelli.me/2009/04/02/rockmarble-how-to-follow-your-favourite-artists-tour-with-marble/</link>
      <pubDate>Thu, 02 Apr 2009 08:51:43 +0000</pubDate>
      
      <guid>http://flavio.castelli.me/2009/04/02/rockmarble-how-to-follow-your-favourite-artists-tour-with-marble/</guid>
      <description>During the last weekend I wanted to have some fun with QJson. So I came out with this idea: retrieve from last.fm the tour dates of my favourite artists and display the locations using Marble.
After some hacking I created this small application: rockmarble&amp;hellip;
If you have a last.fm account rockmarble will import your favourite artist list. Otherwise you can add one artists at a time.
The tour location will be displayed inside Marble, using openstreetmap.</description>
    </item>
    
    <item>
      <title>Tyding up Strigi analyzers</title>
      <link>http://flavio.castelli.me/2008/01/10/tyding-up-strigi-analyzers/</link>
      <pubDate>Thu, 10 Jan 2008 15:49:17 +0000</pubDate>
      
      <guid>http://flavio.castelli.me/2008/01/10/tyding-up-strigi-analyzers/</guid>
      <description>As you may know, KDE4 will use Strigi for meta information extraction instead of the old KFilePlugin classes.
Since Strigi&amp;rsquo;s analyzer work in a different way, lot of code has to be ported. Unfortunately, after a good start, some relevant analyzers were still missing.
But in the last weeks Strigi gained support of:
 wave file avi files txt files dds files rgb files sid files ico files  I&amp;rsquo;ve also updated this summary page.</description>
    </item>
    
    <item>
      <title>Strigi gains FAM support</title>
      <link>http://flavio.castelli.me/2007/11/26/strigi-gains-fam-support/</link>
      <pubDate>Mon, 26 Nov 2007 12:33:52 +0000</pubDate>
      
      <guid>http://flavio.castelli.me/2007/11/26/strigi-gains-fam-support/</guid>
      <description>Last Monday I submitted lot of changes into Strigi&amp;rsquo;s trunk. I&amp;rsquo;ve heavily refactored some classes in order to obtain a more flexible file system notification infrastructure. Thanks to this work now it will be easier to add support for new file system notification facilities. For example, in order to add File Alteration Monitor (aka FAM) support I had to write only 576 loc (including license and documentation stuff).
So, by now, Strigi supports the following file system monitoring facilities:</description>
    </item>
    
    <item>
      <title>Strigi gains full Xesam queries support</title>
      <link>http://flavio.castelli.me/2007/08/31/strigi-gains-full-xesam-queries-support/</link>
      <pubDate>Fri, 31 Aug 2007 17:30:52 +0000</pubDate>
      
      <guid>http://flavio.castelli.me/2007/08/31/strigi-gains-full-xesam-queries-support/</guid>
      <description>As I said in this previous post, Strigi&amp;rsquo;s Xesam support was half-done since XesamUserSearchLanguage wasn’t yet handled. Well, this is no longer true&amp;hellip; ;) In these weeks I’ve been working on XesamUserSearchLanguage support. Ehm&amp;hellip; to be honest, I’ve been fighting with Bison.
But in the end I tamed the beast and now Xesam support in Strigi is full.
IMHO XesamUserSearchLanguage can be considered more important than XesamQueryLanguage since common users will write queries in this way.</description>
    </item>
    
    <item>
      <title>Strigi gets XesamQueryLanguage queries support</title>
      <link>http://flavio.castelli.me/2007/08/07/strigi-gets-xesamquerylanguage-queries-support/</link>
      <pubDate>Tue, 07 Aug 2007 14:43:27 +0000</pubDate>
      
      <guid>http://flavio.castelli.me/2007/08/07/strigi-gets-xesamquerylanguage-queries-support/</guid>
      <description>Since last Thursday Strigi gained XesamQueryLanguage support. This means that now is possible to process queries formulated using this syntax.
But why is this important? If you aren&amp;rsquo;t able to answer the previous question probably you don&amp;rsquo;t know what is Xesam. Here&amp;rsquo;s a short definition taken from the official site: Xesam is an umbrella project with the purpose of providing unified apis and specs for desktop search- and metadata services.</description>
    </item>
    
    <item>
      <title>Lots of improvements into Strigi inotify support</title>
      <link>http://flavio.castelli.me/2007/07/10/lots-of-improvements-into-strigi-inotify-support/</link>
      <pubDate>Tue, 10 Jul 2007 22:50:34 +0000</pubDate>
      
      <guid>http://flavio.castelli.me/2007/07/10/lots-of-improvements-into-strigi-inotify-support/</guid>
      <description>Some days ago I committed lots of changes regarding inotify support. Goodies and improvements have been introduced&amp;hellip; I had this code laying on my laptop for several weeks because I wasn&amp;rsquo;t able to fully test it. An annoying bug afflicting the update index operations was blocking me. But some days ago Jos fixed it, so I didn&amp;rsquo;t have any excuse :)
These are the major changes introduced:
 event caching: using a small cache it&amp;rsquo;s now possible to simplify multiple events and prevent high cpu usage when lot of changes occur on the same files interruption handling during the re-index operations: changing the directories to watch during an indexing operation will break the previous job and start a new one other small changes for improving cpu utilization   Actually I&amp;rsquo;m very happy of the first point, but I think the second one can still be improved&amp;hellip;</description>
    </item>
    
    <item>
      <title>HpCalc</title>
      <link>http://flavio.castelli.me/2006/12/01/hpcalc/</link>
      <pubDate>Fri, 01 Dec 2006 12:53:48 +0000</pubDate>
      
      <guid>http://flavio.castelli.me/2006/12/01/hpcalc/</guid>
      <description>HpCalc is an open-source multi-platform editor for the Hp 39G calculator. I was bored by the official &amp;ldquo;Applet Development kit&amp;rdquo;, a really old and ugly program written for Windows 3.1 (!!), so I decided to write something new (and maybe better).
I made this program just for fun and for learning something (it was the first time I used the Qt library), so don&amp;rsquo;t bother me if this isn&amp;rsquo;t fully comparable to Hp&amp;rsquo;s ADK.</description>
    </item>
    
    <item>
      <title>My second level thesis</title>
      <link>http://flavio.castelli.me/2006/08/08/my-second-level-thesis/</link>
      <pubDate>Tue, 08 Aug 2006 19:57:32 +0000</pubDate>
      
      <guid>http://flavio.castelli.me/2006/08/08/my-second-level-thesis/</guid>
      <description>Months passed in silence and now you publish two news in a couple of minutes!? yep, tonight I just want to go over internet and write something here&amp;hellip; Wink It&amp;rsquo;s time to talk about my second level thesis&amp;hellip;
Kat A couple of months passed since I started seeking something interesting to challenge with. I found kat, an open-source information retrieval program for KDE. If you don&amp;rsquo;t know what&amp;rsquo;s an information retrieval program you&amp;rsquo;ve just to think about a local google.</description>
    </item>
    
    <item>
      <title>QShapes: a process modeling tool</title>
      <link>http://flavio.castelli.me/2006/08/08/qshapes-a-process-modeling-tool/</link>
      <pubDate>Tue, 08 Aug 2006 12:48:55 +0000</pubDate>
      
      <guid>http://flavio.castelli.me/2006/08/08/qshapes-a-process-modeling-tool/</guid>
      <description>A lot of time passed since my last post. As usually I&amp;rsquo;ve been too busy to keep the site updated, forgive me! Last time I let fall something about one of my university projects: qshapes. Now it&amp;rsquo;s time to tell you something more&amp;hellip; QShapes is a process modeling tool, in short words a kind of 2D CAD.
I&amp;rsquo;m going to release it under GPL over berlios site. Actually I I&amp;rsquo;ve registered the project (see http://developer.</description>
    </item>
    
    <item>
      <title>Regexp with boost</title>
      <link>http://flavio.castelli.me/2006/02/16/regexp-with-boost/</link>
      <pubDate>Thu, 16 Feb 2006 12:42:50 +0000</pubDate>
      
      <guid>http://flavio.castelli.me/2006/02/16/regexp-with-boost/</guid>
      <description>How can you add regular expressions to C++? Here you&amp;rsquo;re three small examples.
Pattern matching In this example you’ll find how you can match a regexp in a string.
{% codeblock [pattern matching] [lang:c++ ] %} // Created by Flavio Castelli  // distrubuted under GPL v2 license
#include  #include 
int main() { boost::regex pattern (&amp;ldquo;bg|olug&amp;rdquo;,boost::regex_constants::icase|boost::regex_constants::perl); std::string stringa (&amp;ldquo;Searching for BsLug&amp;rdquo;);
if (boost::regex_search (stringa, pattern, boost::regex_constants::format_perl)) printf (&amp;ldquo;found\n&amp;rdquo;); else printf(&amp;ldquo;not found\n&amp;rdquo;);</description>
    </item>
    
    <item>
      <title>QtCanvas</title>
      <link>http://flavio.castelli.me/2006/01/01/qtcanvas/</link>
      <pubDate>Sun, 01 Jan 2006 00:13:43 +0000</pubDate>
      
      <guid>http://flavio.castelli.me/2006/01/01/qtcanvas/</guid>
      <description>Finally qtcanvas classes are available for Qt 4 series
This isn&amp;rsquo;t the final version of qtcanvas, it&amp;rsquo;s only a backport of the original classes shipped with Qt3.
So what&amp;rsquo;s the difference between this qtcanvas and qt3canvas (available only through Qt3 support with Qt4)? Simple this version works with all open-source versions of Qt &amp;gt;= 4.1.0!!
In this way you can use qtcanvas also under windows (before it wasn&amp;rsquo;t possible with the open-source edition).</description>
    </item>
    
  </channel>
</rss>